package com.example.gacha_fit;

import android.app.Activity;
import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.os.CountDownTimer;
import android.os.Handler;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.example.gacha_fit.activity.AppActivity;
import com.example.gacha_fit.fragmentos.FragmentoGacha;


public class Exito extends Fragment {

    private TextView timerTextView;
    private Button actionButton;
    private CountDownTimer countDownTimer;
    private long startTime;
    private Handler handler;
    private Runnable chronometerRunnable;

    private String mode;
    private int duration;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_exito, container, false);

        timerTextView = view.findViewById(R.id.timerTextView);
        actionButton = view.findViewById(R.id.actionButton);

        actionButton.setVisibility(View.GONE); // Oculto por defecto

        if (getArguments() != null) {
            mode = getArguments().getString("medida");
            duration = getArguments().getInt("unidad");
        }

        if ("timer".equals(mode)) {
            startCountdown();
        } else if ("reps".equals(mode)) {
            startChronometer();
        }

        return view;
    }

    private void startCountdown() {
        countDownTimer = new CountDownTimer(duration * 1000L, 1000) {
            public void onTick(long millisUntilFinished) {
                timerTextView.setText("Tiempo restante: " + millisUntilFinished / 1000 + "s");
            }

            public void onFinish() {
                timerTextView.setText("Â¡Tiempo finalizado!");
                actionButton.setText("Salir");
                actionButton.setVisibility(View.VISIBLE);

                actionButton.setOnClickListener(v -> {
                    FragmentoGacha fragmentoGacha = new FragmentoGacha();
                    Activity activity = getActivity();
                    ((AppActivity) activity).cambiarFragmento(fragmentoGacha);
                });
            }
        }.start();
    }

    private void startChronometer() {
        handler = new Handler();
        startTime = System.currentTimeMillis();

        chronometerRunnable = new Runnable() {
            @Override
            public void run() {
                long elapsed = System.currentTimeMillis() - startTime;
                timerTextView.setText("Tiempo: " + (elapsed / 1000) + "s");
                handler.postDelayed(this, 1000);
            }
        };
        handler.post(chronometerRunnable);

        actionButton.setText("Finalizar");
        actionButton.setVisibility(View.VISIBLE);
        actionButton.setOnClickListener(v -> {
            long totalElapsed = System.currentTimeMillis() - startTime;
            Toast.makeText(getContext(), "Tiempo registrado: " + (totalElapsed / 1000) + "s", Toast.LENGTH_LONG).show();
            FragmentoGacha fragmentoGacha = new FragmentoGacha();
            Activity activity = getActivity();
            ((AppActivity) activity).cambiarFragmento(fragmentoGacha);
        });
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        if (countDownTimer != null) {
            countDownTimer.cancel();
        }
        if (handler != null && chronometerRunnable != null) {
            handler.removeCallbacks(chronometerRunnable);
        }
    }
}